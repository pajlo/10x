name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Środowisko do wdrożenia'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - production

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kodu
        uses: actions/checkout@v4

      - name: Konfiguracja Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Wyłączam cache npm, ponieważ powoduje problemy
          # cache: 'npm'

      - name: Instalacja zależności
        run: npm install
        
      - name: Wyświetl zawartość node_modules
        run: |
          echo "Sprawdzam czy zależności zostały zainstalowane:"
          ls -la node_modules/@supabase || echo "Brak folderu @supabase w node_modules"

      - name: Uruchomienie lint
        run: npm run lint:js
        continue-on-error: true

      - name: Uruchomienie testów jednostkowych
        run: npm run test:unit

      - name: Instalacja Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Przygotowanie zmiennych środowiskowych dla testów
        run: |
          echo "VITE_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env.local
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env.local

      - name: Uruchomienie testów E2E
        run: npm run test:e2e
        env: 
          CI: true

      - name: Czyszczenie danych testowych
        if: always()
        run: |
          echo "Instalacja zależności potrzebnych do czyszczenia danych testowych"
          npm install @supabase/supabase-js
          echo "Uruchamianie skryptu cleartest"
          node cleartest.js

      - name: Budowanie projektu
        run: npm run build

      - name: Zachowanie artefaktów budowania
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

  deploy:
    needs: test-and-build
    if: success() && (github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'test' }}
    steps:
      - name: Pobierz artefakty budowania
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist

      - name: Wyświetl zawartość katalogu do wdrożenia
        run: ls -la dist/

      - name: Przygotowanie plików produkcyjnych
        run: |
          echo "Przygotowuję zmienne środowiskowe dla produkcji"
          # Utwórz plik .env dla środowiska produkcyjnego w dist
          echo "VITE_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > dist/.env
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> dist/.env

      - name: Wdrożenie na serwer produkcyjny przez SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "dist/"
          target: ${{ secrets.DEPLOY_PATH }}
          strip_components: 1
          rm: true # usuwa zawartość katalogu docelowego przed wdrożeniem

      - name: Wykonaj komendy po wdrożeniu
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            echo "Wdrażanie zakończone pomyślnie na ścieżce ${{ secrets.DEPLOY_PATH }}"
            
            # Jeśli używasz serwera Nginx, możesz dodać polecenie do przeładowania konfiguracji
            # sudo systemctl reload nginx
            
            # Ustaw odpowiednie uprawnienia
            chmod -R 755 ${{ secrets.DEPLOY_PATH }}
            
            echo "Wdrożenie zostało zakończone o $(date)"